{
  "createdAt": "2025-07-29T15:48:25.450Z",
  "updatedAt": "2025-08-04T16:57:51.000Z",
  "id": "PKojVdpUdCiq10Fa",
  "name": "My workflow",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        3504,
        1824
      ],
      "id": "ebfc92f9-ab0d-42f1-9b7d-2718fd843dd9",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert YouTube title writer tasked with crafting **10 high‑quality, eye‑catching titles** specifically for standalone storytelling videos about “The Worst Boss Ever,” aimed at burnt‑out employees and jobless viewers under 60.  \n\nUse these guidelines:  \n1. Keep each title under 60 characters.  \n2. Place the primary keyword (“Worst Boss Ever,” “Boss from Hell,” etc.) near the front.  \n3. Create curiosity or open loops (“You Won’t Believe…,” “What Happened When…”).  \n4. Use numbers when possible (“Top 3 Moments…,” “5 Signs…”).  \n5. Evoke strong emotions—outrage, relief, satisfaction.  \n6. Avoid misleading clickbait; titles must deliver on the promised story.  \n\n**Output**:  \nReturn  10 title No extra text.  \n",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        304,
        2688
      ],
      "id": "a89f0573-bd8d-4908-b20b-d19ccd795dbe",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "options": {
          "temperature": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1200,
        2768
      ],
      "id": "1ebd0509-f54d-481e-a542-30899915aa82",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "3cokAgLhEaqeFwE9",
          "name": "hoangvanhung06051993"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "numberOfItems": 10
        }
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserItemList",
      "typeVersion": 1,
      "position": [
        448,
        2912
      ],
      "id": "bc3611b7-b0cd-4606-b828-2b65a61e9763",
      "name": "Item List Output Parser"
    },
    {
      "parameters": {
        "content": "## Generate Title x10",
        "height": 540,
        "width": 820
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        2512
      ],
      "typeVersion": 1,
      "id": "79cd0a2a-f81c-43b2-a06f-bd187da38ec6",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=write the Title\n\n\"\n\nYou are a Professional YouTube Script Writer. Write a 1,800–2,100 word (≈15 min) narrated storytime script about “The Worst Boss Ever” with the title is {{ $json.Title }} using this formula:  \nHook (3–15 sec; 1–2 lines) > Intro (15–30 sec) > Body/Explanation > Introduce a Problem/Challenge > Exploration/Development > Climax/Key Moment > Conclusion/Summary > Call to Action (max 10 sec; 1 line).\n\nHook must be catchy and open an information gap.  \nIntro previews the story and sets up an open loop.  \nBody delivers all details with vivid storytelling, dialogue, concrete specifics, metaphors, emotional beats—do not stray from the topic.  \nProblem/Challenge must appear early.  \nExploration/Development escalates tension.  \nClimax is the satisfying pay‑off.  \nConclusion ties lessons together.  \nCTA is one sentence prompting viewers to subscribe or watch the next video.\n\nWrite in a human, conversational tone: use idioms, metaphors, anecdotes, natural dialogue, occasional humor, simple words (under-12 comprehension), avoid robotic or generic phrases. Do not use stage directions, headings, or parentheses. \nAnd also a tone for tts model to speak script\n```\"",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=output must be include \"Title\", \"script\", \"tone\"\nthe Title alway= {{ $json.Title }}"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1232,
        2544
      ],
      "id": "74cd52d5-0932-488d-8fdc-136d7244a7d0",
      "name": "Basic LLM Chain1",
      "executeOnce": true,
      "retryOnFail": true,
      "notesInFlow": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "script"
            },
            {
              "lookupColumn": "tone"
            },
            {
              "lookupColumn": "decs"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        992,
        2752
      ],
      "id": "def19307-723c-41dc-a606-053800f475f4",
      "name": "Get row(s) in sheet",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n    \n\t\"Title\": \"California\",\n\t\"script\": \"California\",\n\t\"tone\": \"\"\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1328,
        2768
      ],
      "id": "93e7976d-3a77-490e-9784-533167e6f778",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Title": "={{ $json.output.Title }}",
            "script": "={{ $json.output.script }}",
            "tone": "={{ $json.output.tone }}"
          },
          "matchingColumns": [
            "Title"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "script",
              "displayName": "script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "tone",
              "displayName": "tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "decs",
              "displayName": "decs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image prompt",
              "displayName": "image prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1680,
        2752
      ],
      "id": "bc603610-d22a-4c2c-af7e-22a021423fa5",
      "name": "Append or update row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n    \n\t\"image prompt\": \"California\",\n  \"text overlay\": \"California\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        2272,
        768
      ],
      "id": "c872d237-b15a-4a0d-85fb-0b8034e2c77a",
      "name": "Structured Output Parser3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        320,
        2912
      ],
      "id": "d4a7e7cb-acd1-4fab-99b0-319d7a03e186",
      "name": "Google Gemini Chat Model3",
      "credentials": {
        "googlePalmApi": {
          "id": "3cokAgLhEaqeFwE9",
          "name": "hoangvanhung06051993"
        }
      }
    },
    {
      "parameters": {
        "content": "# Thumb prompt\n",
        "height": 580,
        "width": 1000
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        880,
        2528
      ],
      "typeVersion": 1,
      "id": "1040b657-6e9b-4eea-a095-b84f2bf39451",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Script\n\n",
        "height": 600,
        "width": 560
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        672,
        960
      ],
      "typeVersion": 1,
      "id": "f7e3b34e-f566-42de-af4d-1a576e66f786",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a professional content analyst for a YouTube storytelling team.\n\nYour task is to review the 50 articles provided and select exactly **10** that can inspire compelling Storytime scripts for the theme “The Worst Boss Ever.”\n\nYou must prioritize:\n- Articles about toxic bosses, unethical managers, or dysfunctional leadership.\n- AND/OR articles about **U.S. business, labor, or workplace policy** (e.g., new regulations, union issues, economic policies) that could realistically impact characters in a fictional workplace story.\n\nYour response MUST be:\n\n- A **valid JSON array** with exactly **10 objects**.\n- Each object must have this format:\n  ```json\n  {\n    \"summary\": \"Short summary (~100 characters, focused on conflict)\",\n    \"content\": \"Full content of selected article\"\n  }\n\nthese are 50 articles:\n\n{{ $json.allArticles }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1520,
        624
      ],
      "id": "386b0699-6265-4509-a1c9-ba7e086ce2f5",
      "name": "Basic LLM Chain4"
    },
    {
      "parameters": {
        "options": {
          "numberOfItems": 10,
          "separator": "\\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserItemList",
      "typeVersion": 1,
      "position": [
        1840,
        944
      ],
      "id": "7c8fb94b-62e3-417e-8bd8-61fa76814533",
      "name": "Item List Output Parser3"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Title"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2320,
        448
      ],
      "id": "217b05d2-b83b-4c21-8dff-c4c03ff19a37",
      "name": "Get row(s) in sheet4",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"script\": \"I’ll never forget the day my boss, Karen, called me into her office. It was February 2025, and I was barely standing, coughing through a fever... [continues with a 1,800–2,100 word story about being unfairly fired, escalating tensions, a confrontation, and a satisfying resolution]\",\n  \"tone\": \"Conversational and engaging, with dramatic emphasis on emotional moments and a touch of humor\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        3168,
        784
      ],
      "id": "522a9ea2-ed1c-4cdb-a61e-5ec75a538b4c",
      "name": "Structured Output Parser4"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"description\": \"California\",\n  \"tags\": \"string\",\n  \"keywords\": \"string\"\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        2800,
        768
      ],
      "id": "c66633a4-c8c7-44e4-9977-4b99b8362d23",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "content": "# AI MODEL",
        "height": 420,
        "width": 580,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2912,
        1280
      ],
      "id": "54158f37-83ed-4a1d-9518-68cc9a6be64a",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        3200,
        1552
      ],
      "id": "0a9a5afa-2688-49cc-9dd8-8fa6f64361a5",
      "name": "ytbquy759-2",
      "credentials": {
        "googlePalmApi": {
          "id": "wt1xyq0syRByRxht",
          "name": "ytbquy759-2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2992,
        1408
      ],
      "id": "c3e50aa9-b26f-4cde-a71c-df20cea6615e",
      "name": "ytbquy759-1",
      "credentials": {
        "googlePalmApi": {
          "id": "Rtkek47MUUNvQjEN",
          "name": "ytbquy759-1"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        3168,
        1408
      ],
      "id": "a53c9839-008e-4579-8447-215c53f0dd20",
      "name": "ytbquy2-1",
      "credentials": {
        "googlePalmApi": {
          "id": "6WVCyd6gbm6YpvL0",
          "name": "ytbquy2-1"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        3168,
        1552
      ],
      "id": "5e25b6c0-15a4-42d7-b66c-4e9953a3de21",
      "name": "ytbquy2-2",
      "credentials": {
        "googlePalmApi": {
          "id": "7LVhxTj5KloP3bmG",
          "name": "ytbquy2-2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        3328,
        1408
      ],
      "id": "687be5df-f475-4e68-99f1-2d39dc886468",
      "name": "peterhung6558",
      "credentials": {
        "googlePalmApi": {
          "id": "S7cO4IiZWaRTQbtF",
          "name": "peterhung6558"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "maxOutputTokens": 3000,
          "safetySettings": {
            "values": [
              {
                "category": "HARM_CATEGORY_HARASSMENT",
                "threshold": "BLOCK_NONE"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        3328,
        1552
      ],
      "id": "8a541bb9-755e-4766-bf60-93f0e1c5d7aa",
      "name": "hoangvanhung06051993",
      "credentials": {
        "googlePalmApi": {
          "id": "3cokAgLhEaqeFwE9",
          "name": "hoangvanhung06051993"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "News": "={{ $json.text }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "script",
              "displayName": "script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tone",
              "displayName": "tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "decs",
              "displayName": "decs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "keywords",
              "displayName": "keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image prompt",
              "displayName": "image prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text overlay",
              "displayName": "text overlay",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "story image",
              "displayName": "story image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ThumbCheck",
              "displayName": "ThumbCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ImageCheck",
              "displayName": "ImageCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tts-check",
              "displayName": "tts-check",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "News",
              "displayName": "News",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "done",
              "displayName": "done",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1840,
        624
      ],
      "id": "d0becac6-0e05-41c4-aab2-21ab5d79ad1e",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "# GENERATE text",
        "height": 560,
        "width": 960
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2144,
        352
      ],
      "typeVersion": 1,
      "id": "014e44da-09c6-4097-a4a1-97e0e684be72",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "script"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        864,
        1088
      ],
      "id": "31a01b1f-d2f3-40ed-a1a4-172911a43311",
      "name": "Get row(s) in sheet6",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=the title is {{ $json.text }} \nOutput Format:\n\n\"script\": The full 1,800–2,100 word storytime script.\n\"tone\": A description of the tone for a text-to-speech (TTS) model to narrate the script. The tone should be engaging and conversational, with appropriate emphasis on emotional beats \n",
        "hasOutputParser": true,
        "needsFallback": true,
        "messages": {
          "messageValues": [
            {
              "message": "=System Prompt for YouTube Storytime Script Generation\nRole: You are a Professional YouTube Script Writer specializing in crafting engaging storytime scripts for YouTube videos. Your goal is to create a 1,800–2,100 word (approximately 15 minutes when narrated) script about \"The Worst Boss Ever\" that captivates viewers and encourages them to subscribe or watch more videos.\nTask: Write a narrated storytime script that follows this structure:\n\nHook: Begin with a catchy opening that grabs the viewer's attention and creates an information gap. Use a surprising fact, a provocative question, or a dramatic statement to intrigue the audience.\n\nIntro: Preview the story and set up an open loop that makes the viewer curious about what happens next. Clearly introduce the topic (\"The Worst Boss Ever\") and hint at the central conflict or stakes.\n\nBody/Explanation: Deliver the story with vivid storytelling techniques. Include:\n\nDialogue between characters to bring the story to life.\nConcrete specifics (e.g., names, places, dates) to make the story feel real.\nMetaphors and emotional beats to evoke feelings in the viewer.\nEnsure the story stays on topic and does not stray into unrelated details.\n\n\nIntroduce a Problem/Challenge: Early in the story, present the main conflict or issue. This should clearly establish why the boss is \"the worst\" (e.g., unfair treatment, incompetence, abusive behavior, ethical violations, etc.).\n\nExploration/Development: Gradually escalate the tension by showing how the boss's behavior affects the protagonist (or other characters). Highlight the challenges faced and how they intensify over time.\n\nClimax/Key Moment: Reach the most intense or satisfying part of the story. This could be a confrontation with the boss, a moment of realization, or a turning point where the protagonist finds a way to cope or overcome the situation.\n\nConclusion/Summary: Tie together the lessons learned or the outcome of the story. Provide a sense of closure or resolution, ensuring the viewer feels satisfied with how the story ends.\n\nCall to Action: End with a one-sentence prompt encouraging viewers to subscribe or watch the next video. This should be direct and engaging, e.g., \"If you loved this story, don’t forget to subscribe for more wild workplace tales!\"\n\n\nTone and Style:\n\nWrite in a human, conversational tone that feels natural and relatable.\nUse idioms, metaphors, anecdotes, and natural dialogue to make the script engaging.\nIncorporate occasional humor where appropriate, but ensure it doesn’t undermine the emotional impact of the story.\nUse simple words and sentence structures suitable for an audience with under-12 comprehension.\nAvoid robotic or generic phrases, stage directions, headings, or parentheses.\n\nAdditional Guidelines:\n\nConsider writing the story from the first-person perspective of an employee who experienced \"The Worst Boss Ever.\" This can make the narrative more immediate and engaging for viewers.\nEnsure the story is original and fictional but draws inspiration from common experiences and tropes about bad bosses (e.g., micromanagement, favoritism, incompetence, harassment, etc.) to make it relatable.\nThe story should be respectful and avoid harmful stereotypes or unfair targeting of individuals or groups. Portray the boss’s behavior as clearly wrong without justifying or excusing it.\nThe script should have a clear moral or lesson, especially in the conclusion, to leave viewers with something to think about.\n\nOutput Format:\n\n\"script\": The full 1,800–2,100 word storytime script.\n\"tone\": A description of the tone for a text-to-speech (TTS) model to narrate the script. The tone should be engaging and conversational, with appropriate emphasis on emotional beats \n\n\nAdditional Notes:\n\nThe script must be approximately 15 minutes long when narrated, so ensure pacing is balanced across sections.\nUse storytelling techniques like sensory details, internal monologues, and character development to make the story vivid and immersive.\nWhile the title is currently \"The Worst Boss Ever,\" ensure the script can be adapted for other titles if needed by focusing on the core structure and storytelling principles.\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        720,
        1280
      ],
      "id": "c525fbc2-b177-4424-9dc4-d40fe851779d",
      "name": "Basic LLM Chain8",
      "executeOnce": true,
      "retryOnFail": true,
      "notesInFlow": true
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"script\": \"California\",\n\t\"tone\": \"\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1008,
        1104
      ],
      "id": "3bc2b8bb-a0b1-4f7d-a915-998507e7f8d3",
      "name": "Structured Output Parser5"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "News": "={{ $('Get row(s) in sheet6').item.json.News }}",
            "script": "={{ $json.output.script }}",
            "tone": "={{ $json.output.tone }}"
          },
          "matchingColumns": [
            "News"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "script",
              "displayName": "script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "tone",
              "displayName": "tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "decs",
              "displayName": "decs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image prompt",
              "displayName": "image prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text overlay",
              "displayName": "text overlay",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ThumbCheck",
              "displayName": "ThumbCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ImageCheck",
              "displayName": "ImageCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "News",
              "displayName": "News",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "news detail",
              "displayName": "news detail",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        992,
        1280
      ],
      "id": "2c5f7b78-e1af-45aa-ae4e-e3af6761c38e",
      "name": "Update row in sheet3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "ThumbCheck"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        4912,
        1824
      ],
      "id": "5e13df31-cd0d-4acd-ad46-2635cd115974",
      "name": "Get row(s) in sheet8",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1937569639,
          "mode": "list",
          "cachedResultName": "temp",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=1937569639"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1680,
        400
      ],
      "id": "6092a525-569c-46a9-b3ab-9f67ce4b5564",
      "name": "Get row(s) in sheet9",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    allArticles: items.map(item => {\n      return `• ${item.json.title} - ${item.json.contentSnippet} [${item.json.link}]`;\n    }).join(\"\\n\")\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1840,
        400
      ],
      "id": "ef5f86e7-fe84-4f55-930d-968446b0158f",
      "name": "Code1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1b60f116-e1d5-4d1f-bbcd-959fc422ac1a",
              "name": "urls",
              "value": "[\"https://rss.app/rss-feed?keyword=Finance&region=US&lang=en\",\"https://rss.app/feeds/tIVzalpk5rlKHwOm.xml\"]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        400
      ],
      "id": "27df7ea2-ae53-4651-bf9f-9f2350a6273f",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "fieldToSplitOut": "urls",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1232,
        400
      ],
      "id": "1dfc3fa4-65f8-402d-9e32-2ec663e10022",
      "name": "Split Out"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        784,
        608
      ],
      "id": "8f283949-5977-433d-a556-4c9631c18144",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1937569639,
          "mode": "list",
          "cachedResultName": "temp",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=1937569639"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ $json.title }}",
            "link": "={{ $json.link }}",
            "contentSnippet": "={{ $json.contentSnippet }}",
            "pubDate": "={{ $json.pubDate }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "contentSnippet",
              "displayName": "contentSnippet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1232,
        608
      ],
      "id": "c4aaca3e-266d-4c9c-adb5-49b0f5caceb1",
      "name": "Append row in sheet2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert YouTube title writer. Your task is to generate 1 high-quality, eye-catching titles for standalone storytelling videos themed around \"The Worst Boss Ever.\" These videos are aimed at burnt-out employees and jobless viewers under 60.\n\nEach title should incorporate realistic elements based on current news or headlines, which are dynamically provided to you as input.\n\n🧠 Your Guidelines:\nUse the provided news-based bullet points to ground your titles in realism.\n\nKeep each title under 60 characters.\n\nPlace the primary keyword (“Worst Boss Ever,” “Boss from Hell,” etc.) near the front.\n\nUse curiosity-driven hooks (“You Won’t Believe…”, “What Happened When…”).\n\nUse numbers when relevant (“Top 3 Signs…”, “5 Times…”).\n\nAim for emotional triggers—outrage, justice, satisfaction.\n\nNo misleading clickbait—the title must match the content implied by the news data.\n\nUse plain, punchy language—avoid jargon.\n{{ $json.News }}\nEach title you generate should reference or reflect at least one of the items above. You may combine elements for extra impact.",
        "needsFallback": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2512,
        448
      ],
      "id": "dd78d262-c52a-4d64-8baf-ed1d37a936a0",
      "name": "Title"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a YouTube thumbnail AI specialist. Video theme: storytime drama about a toxic or unethical boss, based on real workplace conflict.\n\nWhen given a video Title and full Script, output exactly one JSON object with this field:\n\n• image_prompt: A single, vivid scene description for Gemini 2.0 image generation, optimized for high CTR no overlay text.\n• text overlay: A caption to put on the image, Triggering curious and optimized for high CTR:\nBest practices:\n1. Use 2–3 bright, contrasting colors—pick one bold accent.  \n2. HD, ultra‑crisp realism, no blur anywhere.  \n3. Close‑up on boss’s face, strong visible emotion (smug, shocked, fearful).  \n4. Include 1–2 concrete props from script (e.g., crumpled paper, spilled coffee mug).  \n5. Show a single action moment (e.g., boss gripping papers, throwing chair).  \n6. Dramatic, high‑contrast lighting to sculpt features.  \n7. Simple blurred background—no text overlays or UI elements.  \n8. Focal point must be boss’s face and the one prop/action.  \n9. Accurate to the script—no abstract metaphors.\n\nScript: {{ $json.output.script }}  \nNews: {{ $('Get row(s) in sheet4').item.json.News }}\n\nDo not include any other fields or text outside the JSON.  ",
        "hasOutputParser": true,
        "needsFallback": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2192,
        624
      ],
      "id": "b79c3ecf-3591-4b70-90e0-4a0d3fac28be",
      "name": "Thumbnail",
      "executeOnce": true,
      "retryOnFail": true,
      "notesInFlow": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert in YouTube SEO and audience targeting.\n\nYour task is to generate a high-performing description, a list of relevant keyword tags, and a group of strategic topic keywords for a standalone storytelling video based on:\n\nA YouTube Title\n\nA full Script\n\nA News-based input (the real-world event or incident that inspired the video content)\n\nThis content is designed for burnt-out employees, unemployed workers under 60, or those frustrated with corporate culture.\n\n🎯 Your Output Must Include:\n✅ YouTube Description\n\n2–3 paragraphs (max 300 words)\n\nClear summary of the story\n\nInclude key themes or emotional triggers (e.g. injustice, corporate greed, employee struggle, workplace trauma)\n\nInclude 3–5 natural keyword phrases that can help in SEO (not hashtags)\n\nInvite engagement (ask a question or comment prompt at the end)\n\n✅ YouTube Tags (max 15)\n\nFormat: a simple list of short tags (no #, add commas for each)\n\nCombine emotional, topic-based, and trending tags\n\nUse both broad terms (“toxic workplace”, “job burnout”) and specific ones (“worst boss ever”, “fired on Christmas”)\n\n✅ Search Keywords (5–10)\n\nThese are strategic searchable phrases viewers might actually type\n\nInclude both short-tail (e.g. “bad boss”) and long-tail keywords (e.g. “how to survive a toxic boss”)\n\n🧠 Context & Behavior Guidelines:\nTreat “tags” as metadata—they help with minor categorization but don’t impact ranking significantly.\n\nTreat “keywords” as search intent drivers—they help YouTube understand what this video is about and who it should recommend it to.\n\nThe description is an opportunity for keyword-rich storytelling—don’t stuff, but do include phrases from the news and script when relevant.\n\nNews input is based on real events, so make sure the output feels realistic and emotionally resonant.\n\n🧾 Input \nNews:\n{{ $('Get row(s) in sheet4').item.json.News }}\n\nTitle, Script\n{{ $('Title').item.json.text }}\n{{ $('Basic LLM Chain2').item.json.output.script }}\n📤 Output Format\n{\n  \"description\": \"string\",\n  \"tags\": [\"tag1\", \"tag2\", ...],\n  \"keywords\": [\"keyword phrase 1\", \"keyword phrase 2\", ...]\n}",
        "hasOutputParser": true,
        "needsFallback": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2528,
        624
      ],
      "id": "20aead6b-11a2-44a8-b46f-0b9bb1d8906b",
      "name": "Decs, Tags",
      "retryOnFail": true
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Title": "={{ $('Title').item.json.text }}",
            "image prompt": "={{ $('Thumbnail').item.json.output['image prompt'] }}",
            "News": "={{ $('Get row(s) in sheet4').item.json.News }}",
            "row_number": 0,
            "script": "={{ $('Basic LLM Chain2').item.json.output.script }}",
            "tone": "={{ $('Basic LLM Chain2').item.json.output.tone }}",
            "decs": "={{ $('Decs, Tags').item.json.output.description }}",
            "keywords": "={{ $('Decs, Tags').item.json.output.keywords }}",
            "tags": "={{ $('Decs, Tags').item.json.output.tags }}",
            "text overlay": "={{ $('Thumbnail').item.json.output['text overlay'] }}"
          },
          "matchingColumns": [
            "News"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "script",
              "displayName": "script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "tone",
              "displayName": "tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "decs",
              "displayName": "decs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "keywords",
              "displayName": "keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "image prompt",
              "displayName": "image prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "text overlay",
              "displayName": "text overlay",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "story image",
              "displayName": "story image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ThumbCheck",
              "displayName": "ThumbCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ImageCheck",
              "displayName": "ImageCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "News",
              "displayName": "News",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2864,
        624
      ],
      "id": "36f15f39-a79b-46c4-9b55-5d2bf91a248c",
      "name": "Upload to Sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "# GET NEWS",
        "height": 460,
        "width": 780
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        672,
        352
      ],
      "id": "5823f81c-d336-405c-8164-34428b1f5dac",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "# Filter NEWS",
        "height": 460,
        "width": 620
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1472,
        352
      ],
      "id": "c7c874a4-4635-4fa7-a86f-f5391318ee12",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "story image"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        3824,
        1072
      ],
      "id": "6f867e11-dba0-4203-859e-4e15ef01379e",
      "name": "Get row(s) in sheet1",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"story image\": [\"\", \"\", \"\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        3184,
        848
      ],
      "id": "9bbf9797-2fe6-4c13-b74e-fa5ace0aaf99",
      "name": "Structured Output Parser6"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an AI image-prompt engineer creating cinematic, photorealistic images for YouTube slideshow-style storytelling videos.\nYour task is to read the video title, full script, news context, and thumbnail description, and generate four high-quality image prompts, each representing a key emotional or narrative beat in the story (e.g., conflict, turning point, resolution).\n\nYour output:\nA single JSON object with this format:\n\njson\nCopy\nEdit\n{\n  \"image_prompts\": [\n    \"Prompt 1\",\n    \"Prompt 2\",\n    \"Prompt 3\",\n    \"Prompt 4\"\n  ]\n}\nPrompt Writing Guidelines:\nStyle: Cinematic, realistic, and consistent across all images. The characters, clothing, and environments should match across scenes.\n\nPerspective: Use photography-like language — describe camera angles, lighting style (e.g., soft shadows, dramatic backlight), mood, and composition.\n\nEmotion: Focus on authentic human expressions and body language (e.g., clenched jaw, teary eyes, shaking hands).\n\nContext: Base imagery on realistic settings or props relevant to the narrative (courtroom, office, street protest, hospital).\n\nScript-driven: Reflect the story progression: beginning, tension or conflict, emotional climax, resolution.\n\nFormat: Use short, vivid natural language descriptions (not keyword tags or lists). Each prompt should be < 50 words.\n\nNo text overlays or captions. (Optional: suggest visual emphasis using circles, arrows, etc.)\n\nInputs available:\n\ntitle: {{ $json.Title }}\n\nscript: {{ $json.script }}\n\nnews context: {{ $json.News }}\n\nthumbnail description: {{ $json['image prompt'] }}",
        "hasOutputParser": true,
        "needsFallback": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        4160,
        1072
      ],
      "id": "cb3a77fd-7730-44d0-a1b7-6349badcd4f2",
      "name": "Basic LLM Chain3",
      "retryOnFail": true,
      "executeOnce": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://image.pollinations.ai/prompt/{{ $json.encoded }}?model=turnbo&nologo=true&width=1920&height=1080?token=m-fojP6QyD-DY1Lz?",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4912,
        928
      ],
      "id": "7dc20bed-379f-4c65-a137-a53b11bab5cb",
      "name": "HTTP Request8",
      "executeOnce": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      encoded: encodeURIComponent($input.first().json.output['story image'][1])\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4768,
        928
      ],
      "id": "e492d480-c342-453e-a1a5-ed86dffcf1dc",
      "name": "Code4"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/files/Story image/{{ $('Get row(s) in sheet1').item.json.row_number }}/storyimage2.jpeg",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5056,
        928
      ],
      "id": "278472f0-717a-4ed3-b50b-02f4846757cf",
      "name": "Read/Write Files from Disk3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://image.pollinations.ai/prompt/{{ $json.encoded }}?model=turnbo&nologo=true&width=1920&height=1080?token=m-fojP6QyD-DY1Lz?",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4912,
        1104
      ],
      "id": "f632291d-5d67-4d48-bf0b-810bf81c9567",
      "name": "HTTP Request9",
      "executeOnce": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      encoded: encodeURIComponent($input.first().json.output['story image'][2])\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4768,
        1104
      ],
      "id": "cd51e485-1f62-4eca-8f02-aa06ac1c295c",
      "name": "Code5"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/files/Story image/{{ $('Get row(s) in sheet1').item.json.row_number }}/storyimage3.jpeg",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5056,
        1104
      ],
      "id": "f082ebb9-1939-499e-89ae-577db877aec3",
      "name": "Read/Write Files from Disk4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://image.pollinations.ai/prompt/{{ $json.encoded }}?model=turnbo&nologo=true&width=1920&height=1080?token=m-fojP6QyD-DY1Lz?",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4912,
        1248
      ],
      "id": "af9b9b2e-88cd-4fd1-9e68-5240ccf7ac43",
      "name": "HTTP Request10",
      "executeOnce": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      encoded: encodeURIComponent($input.first().json.output['story image'][3])\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4768,
        1248
      ],
      "id": "6375005a-3c37-49e8-a0de-0b092e7b8490",
      "name": "Code6"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/files/Story image/{{ $('Get row(s) in sheet1').item.json.row_number }}/storyimage4.jpeg",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5056,
        1248
      ],
      "id": "1ae6d6d7-4525-4181-8874-76ac3e6cfe35",
      "name": "Read/Write Files from Disk5"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Title": "={{ $('Get row(s) in sheet1').item.json.Title }}",
            "story image": "yes"
          },
          "matchingColumns": [
            "Title"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "script",
              "displayName": "script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tone",
              "displayName": "tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "decs",
              "displayName": "decs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "keywords",
              "displayName": "keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image prompt",
              "displayName": "image prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text overlay",
              "displayName": "text overlay",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "story image",
              "displayName": "story image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ThumbCheck",
              "displayName": "ThumbCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ImageCheck",
              "displayName": "ImageCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "News",
              "displayName": "News",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        5952,
        1040
      ],
      "id": "807e760a-4d1e-4f88-81a6-68145eedb573",
      "name": "Update row in sheet1",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/files/Story image/{{ $('Get row(s) in sheet8').item.json.row_number }}/storyimage4.jpeg",
        "options": {
          "append": true
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5392,
        1824
      ],
      "id": "f9b14ca9-e6a2-44f5-90a0-317d2c14d7f2",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        1680,
        1280
      ],
      "id": "1a2e4590-acfe-4f06-bf2e-5de10e9edcba",
      "name": "When chat message received",
      "webhookId": "7da06ca0-6fca-448e-9c12-1fef35e5d89d"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": 0,
            "Title": "={{ $('Get row(s) in sheet8').item.json.Title }}",
            "ThumbCheck": "yes"
          },
          "matchingColumns": [
            "Title"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "script",
              "displayName": "script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tone",
              "displayName": "tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "decs",
              "displayName": "decs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "keywords",
              "displayName": "keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image prompt",
              "displayName": "image prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text overlay",
              "displayName": "text overlay",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "story image",
              "displayName": "story image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ThumbCheck",
              "displayName": "ThumbCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ImageCheck",
              "displayName": "ImageCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "News",
              "displayName": "News",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        5536,
        1824
      ],
      "id": "0eec0e69-8381-490a-973d-7cb2117590ef",
      "name": "Update row in sheet2",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      encoded: encodeURIComponent($input.first().json['image prompt'])\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5072,
        1824
      ],
      "id": "1bf482bd-38c0-4cd0-8079-0e7acb7503d8",
      "name": "Code7"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a Professional YouTube Script Writer specializing in crafting engaging storytime scripts for YouTube videos. Your goal is to create a 1,800–2,100 word (approximately 15 minutes when narrated) script about \"The Worst Boss Ever\" that captivates viewers and encourages them to subscribe or watch more videos. Your script must feel original and immersive — but it should be **inspired by real-world news** provided in the prompt. These news stories offer context, characters, or themes (e.g. toxic leadership, bad corporate behavior, or policies that affect employees).\n\n\n\nTask: Write a narrated storytime script that follows this structure:\n\nHook: Begin with a catchy opening that grabs the viewer's attention and creates an information gap. Use a surprising fact, a provocative question, or a dramatic statement to intrigue the audience.\n\nIntro: Preview the story and set up an open loop that makes the viewer curious about what happens next. Clearly introduce the topic (\"The Worst Boss Ever\") and hint at the central conflict or stakes.\n\nBody/Explanation: Deliver the story with vivid storytelling techniques. Include:\n\nDialogue between characters to bring the story to life.\nConcrete specifics (e.g., names, places, dates) to make the story feel real.\nMetaphors and emotional beats to evoke feelings in the viewer.\nEnsure the story stays on topic and does not stray into unrelated details.\n\n\nIntroduce a Problem/Challenge: Early in the story, present the main conflict or issue. This should clearly establish why the boss is \"the worst\" (e.g., unfair treatment, incompetence, abusive behavior, ethical violations, etc.).\n\nExploration/Development: Gradually escalate the tension by showing how the boss's behavior affects the protagonist (or other characters). Highlight the challenges faced and how they intensify over time.\n\nClimax/Key Moment: Reach the most intense or satisfying part of the story. This could be a confrontation with the boss, a moment of realization, or a turning point where the protagonist finds a way to cope or overcome the situation.\n\nConclusion/Summary: Tie together the lessons learned or the outcome of the story. Provide a sense of closure or resolution, ensuring the viewer feels satisfied with how the story ends.\n\nCall to Action: End with a one-sentence prompt encouraging viewers to subscribe or watch the next video. This should be direct and engaging, e.g., \"If you loved this story, don’t forget to subscribe for more wild workplace tales!\"\n\n\nTone and Style:\n\nWrite in a human, conversational tone that feels natural and relatable.\nUse idioms, metaphors, anecdotes, and natural dialogue to make the script engaging.\nIncorporate occasional humor where appropriate, but ensure it doesn’t undermine the emotional impact of the story.\nUse simple words and sentence structures suitable for an audience with under-12 comprehension.\nAvoid robotic or generic phrases, stage directions, headings, or parentheses.\n\nAdditional Guidelines:\n\nConsider writing the story from the first-person perspective of an employee who experienced \"The Worst Boss Ever.\" This can make the narrative more immediate and engaging for viewers.\nEnsure the story is original and fictional but draws inspiration from common experiences and tropes about bad bosses (e.g., micromanagement, favoritism, incompetence, harassment, etc.) to make it relatable.\nThe story should be respectful and avoid harmful stereotypes or unfair targeting of individuals or groups. Portray the boss’s behavior as clearly wrong without justifying or excusing it.\nThe script should have a clear moral or lesson, especially in the conclusion, to leave viewers with something to think about.\n\nAdditional Notes:\n\nThe script must be approximately 15 minutes long when narrated, so ensure pacing is balanced across sections.\nUse storytelling techniques like sensory details, internal monologues, and character development to make the story vivid and immersive.\nWhile the title is currently \"The Worst Boss Ever,\" ensure the script can be adapted for other titles if needed by focusing on the core structure and storytelling principles.\n\n\nThe title is: {{ $json.text }}  \nThe news content is: {{ $('Get row(s) in sheet4').item.json.News }}\n\nGenerate a detailed storytime script of 1,800–2,100 words that narrates this news in a personal, engaging way.\n\nWhen given a video Title and news, output exactly one JSON object with this field:\n\n• script: Full 1,800–2,100 word storytime script.\n• tone: Describe the tone for a TTS narrator. It should be engaging and conversational, with natural emotional emphasis:\n\n⚠️ Do not include anything else. Just valid JSON with those two fields.\n",
        "hasOutputParser": true,
        "needsFallback": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2800,
        448
      ],
      "id": "a2a4f22f-4a0d-4e86-80e2-3b848766497f",
      "name": "Basic LLM Chain2",
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=mkdir -p \"/files/Story image/{{$json.row_number}}\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        3952,
        1072
      ],
      "id": "a071bf7f-43f6-4f0b-87b5-e37f46a613c3",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://image.pollinations.ai/prompt/{{ $json.encoded }}?model=turnbo&nologo=true&width=1920&height=1080?token=m-fojP6QyD-DY1Lz?",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4912,
        784
      ],
      "id": "dd5a1843-bc07-4e0b-bc9d-14f739e9e509",
      "name": "HTTP Request12",
      "executeOnce": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      encoded: encodeURIComponent($input.first().json.output['story image'][0])\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4768,
        784
      ],
      "id": "fdba5051-15a2-4939-ba19-61f825b95b44",
      "name": "Code8"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/files/Story image/{{ $('Get row(s) in sheet1').item.json.row_number }}/storyimage1.jpeg",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5056,
        784
      ],
      "id": "0e98f22d-19fa-4fb7-a977-41779ab32ef6",
      "name": "Read/Write Files from Disk6"
    },
    {
      "parameters": {
        "resource": "credential",
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        1520,
        1168
      ],
      "id": "71c8f1d8-1aa4-47b7-9bcd-0e2983fd41ba",
      "name": "Create a credential",
      "credentials": {
        "n8nApi": {
          "id": "PsuJ7OjfixahpbJS",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "command": "=ffmpeg -f s16le -ar 24000 -ac 1 -i /files/Story\\ image/{{ $('Get row(s) in sheet2').item.json.row_number }}/audio_{{ $('Get row(s) in sheet2').item.json.row_number }}.pcm /files/Story\\ image/{{ $('Get row(s) in sheet2').item.json.row_number }}/audio_{{ $('Get row(s) in sheet2').item.json.row_number }}.mp3"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9248,
        1488
      ],
      "id": "97ca91a5-2f26-4e58-be28-ce3b62d76291",
      "name": "Convert to mp3"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "candidates[0].content.parts[0].inlineData.data",
        "options": {
          "fileName": "=audio_{{ $('Get row(s) in sheet2').item.json.row_number }}.pcm"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        8800,
        1488
      ],
      "id": "5274ab5d-abf9-4b8a-bdfe-560033503588",
      "name": "Convert to PCM File"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/files/Story image/{{ $('Get row(s) in sheet2').item.json.row_number }}/audio_{{ $('Get row(s) in sheet2').item.json.row_number }}.pcm",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        9024,
        1488
      ],
      "id": "b6dd0702-d4de-49db-bd55-6c681cb367af",
      "name": "Write Files to VPS"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "tts-check"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        6848,
        1392
      ],
      "id": "ed38e0e4-06ef-4b92-bb36-1982924eca7b",
      "name": "Get row(s) in sheet2",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const raw = $input.first().json.script;\n\n  const cleaned_script = typeof raw === 'string'\n    ? raw\n        .replace(/\\\\/g, '\\\\\\\\')   // Escape backslashes\n        .replace(/\"/g, '\\\\\"')     // Escape double quotes\n        .replace(/\\r?\\n/g, ' ')   // Remove line breaks\n        .trim()\n    : raw;\n\n\n  return {\n    json: {\n      cleaned_script: cleaned_script\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7008,
        1392
      ],
      "id": "25ba9632-9aa9-4cb0-a288-ccf577e07726",
      "name": "Code3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://image.pollinations.ai/prompt/{{ $json.encoded }}?model=gptimage&nologo=true&width=1920&height=1080?token=m-fojP6QyD-DY1Lz?",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5216,
        1824
      ],
      "id": "92667471-4019-4dec-829e-93423686ac9b",
      "name": "HTTP Request11",
      "executeOnce": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "command": "=rm \"/files/Story image/{{ $('Get row(s) in sheet2').item.json.row_number }}/audio_{{ $('Get row(s) in sheet2').item.json.row_number }}.pcm\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        9472,
        1488
      ],
      "id": "dbe3ba2d-5095-4224-97d2-f75f4cb01243",
      "name": "Execute Command1"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tts-check": "yes",
            "row_number": "={{ $('Get row(s) in sheet2').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "script",
              "displayName": "script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tone",
              "displayName": "tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "decs",
              "displayName": "decs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "keywords",
              "displayName": "keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image prompt",
              "displayName": "image prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text overlay",
              "displayName": "text overlay",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "story image",
              "displayName": "story image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ThumbCheck",
              "displayName": "ThumbCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ImageCheck",
              "displayName": "ImageCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tts-check",
              "displayName": "tts-check",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "News",
              "displayName": "News",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "done",
              "displayName": "done",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        9696,
        1488
      ],
      "id": "0ede0fa2-eaf5-4f7d-a45e-6f7f533d29ec",
      "name": "Update row in sheet",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:streamGenerateContent?key=AIzaSyAb8HOXHoG0zTSEsmpAMuXMbLLHmHCxzsE",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Say in a {{ $('Get row(s) in sheet2').item.json.tone }} tone : {{ $('Code11').item.json.chunk }}\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"responseModalities\": [\"audio\"],\n    \"temperature\": 1,\n    \"speech_config\": {\n      \"voice_config\": {\n        \"prebuilt_voice_config\": {\n          \"voice_name\": \"{{ $('Code9').item.json.selected_voice }}\"\n        }\n      }\n    }\n  }\n}\n",
        "options": {
          "timeout": 1800000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7792,
        1536
      ],
      "id": "32fa77fe-7e0e-490f-aca3-65bd88237bc5",
      "name": "tts-1",
      "retryOnFail": false,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:streamGenerateContent?key=AIzaSyDtuw7IB60TQJhcNXria7OSYR8TSbFfGOw",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Say in a {{ $('Get row(s) in sheet2').item.json.tone }} tone : {{ $json.cleaned_script }}\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"responseModalities\": [\"audio\"],\n    \"temperature\": 1,\n    \"speech_config\": {\n      \"voice_config\": {\n        \"prebuilt_voice_config\": {\n          \"voice_name\": \"{{ $json.selected_voice }}\"\n        }\n      }\n    }\n  }\n}\n",
        "options": {
          "timeout": 1800000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7648,
        1392
      ],
      "id": "6a5afc88-82a1-4868-a9d1-54cb0a018498",
      "name": "tts-2",
      "retryOnFail": false,
      "alwaysOutputData": true,
      "executeOnce": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "done",
              "lookupValue": "done"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        3712,
        1824
      ],
      "id": "b714d447-8ce7-4530-8cc4-e81bb99574f7",
      "name": "Get row(s) in sheet3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "fileSelector": "=/files/exported/{{ $json.row_number }}.mp4",
        "options": {
          "dataPropertyName": "data"
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        3920,
        1824
      ],
      "id": "da34af79-c07b-4456-b140-f7125d56aaf3",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "upload",
        "title": "={{ $('Get row(s) in sheet3').item.json.Title.replace(/\\*\\*/g, '') }}\n",
        "regionCode": "US",
        "categoryId": "22",
        "options": {
          "defaultLanguage": "en",
          "description": "={{ $('Get row(s) in sheet3').item.json.decs }}",
          "embeddable": true,
          "license": "youtube",
          "notifySubscribers": true,
          "privacyStatus": "private",
          "publicStatsViewable": true,
          "recordingDate": "={{ $today }}",
          "tags": "={{ $('Get row(s) in sheet3').item.json.tags }}"
        }
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        4128,
        1824
      ],
      "id": "7b3871cf-c7f1-4d1f-abca-7ad02113ff21",
      "name": "Upload a video",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "5uSJ7BoT5gLAnMYF",
          "name": "YouTube account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        784,
        400
      ],
      "id": "0a3a3871-aab9-4a4b-b763-ebdcaedc7692",
      "name": "Get News"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1520,
        400
      ],
      "id": "94bd6e11-6bee-43dd-b14c-991c1e088a2e",
      "name": "Filter News"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n    \n\t\"image prompt\": \"California\",\n  \"text overlay\": \"California\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        3632,
        736
      ],
      "id": "12c0740c-eafa-4db6-bb71-59b956be8e34",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Title"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        3632,
        336
      ],
      "id": "77d3cd57-fe0e-42cb-9f5d-6e70d0c08ae2",
      "name": "Get row(s) in sheet5",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"description\": \"California\",\n  \"tags\": \"string\",\n  \"keywords\": \"string\",\n  \"tone\": \"a tone\"\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        4112,
        656
      ],
      "id": "ddb914d1-40aa-4c6e-a870-9d169e751701",
      "name": "Structured Output Parser7"
    },
    {
      "parameters": {
        "content": "# GENERATE text",
        "height": 560,
        "width": 960
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3424,
        240
      ],
      "typeVersion": 1,
      "id": "095348dc-8829-4f0a-b982-2140f3c2d45e",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert YouTube title writer. Your task is to generate 1 high-quality, eye-catching title for standalone storytelling videos themed around \"The Worst Boss Ever.\" These videos are aimed at burnt-out employees and jobless viewers under 60.\n\nEach title should incorporate realistic elements based on current news or headlines, which are dynamically provided to you as input.\n\n🧠 Your Guidelines:\n\n\n\n\n\nUse the provided news-based bullet points to ground your titles in realism.\n\n\n\nKeep each title under 60 characters.\n\n\n\nPlace the primary keyword (“Worst Boss Ever,” “Boss from Hell,” etc.) near the front if possible.\n\n\n\nUse strong emotional hooks to grab attention (e.g., \"Outrageous,\" \"Unbelievable,\" \"Heartbreaking,\" \"Justice Served\").\n\n\n\nIncorporate curiosity-driven phrases (e.g., \"You Won’t Believe…\", \"What Happened When…\", \"The Shocking Truth About…\").\n\n\n\nUse numbers when relevant (e.g., \"Top 3 Signs…\", \"5 Times…\").\n\n\n\nHighlight the impact on employees or the absurdity of the boss's actions.\n\n\n\nUse plain, punchy language—avoid jargon.\n\n\n\nConsider using all caps for one key word for emphasis (e.g., \"FIRED for Being Sick\").\n\n\n\nEnsure the title is specific to the news item and not vague.\n\n\n\nAim for titles that are shareable and relatable to the target audience.\n\n\n\nNo misleading clickbait—the title must match the content implied by the news data.\n\nExamples:\n\n\n\n\n\nNews item: \"CEO Denies Paternity Leave to New Fathers\"\n\n\n\n\n\nGood title: \"No Paternity Leave: The Heartless Boss Who Said No to Dads\"\n\n\n\nNews item: \"Manager Forces Employees to Work During Hurricane\"\n\n\n\n\n\nGood title: \"Work Through the Storm: The Boss Who Ignored Nature's Fury\"\n\n{{ $json.News }}\n\nEach title you generate should reference or reflect at least one of the items above. You may combine elements for extra impact.",
        "needsFallback": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        3824,
        336
      ],
      "id": "71b9b84a-354f-4107-854d-76e1c7d1e321",
      "name": "Title1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a YouTube thumbnail AI specialist. Video theme: storytime drama about a toxic or unethical boss, based on real workplace conflict.\n\nWhen given a video Title and full Script, output exactly one JSON object with this field:\n\n• image_prompt: A single, vivid scene description for Gemini 2.0 image generation, optimized for high CTR no overlay text.\n• text overlay: A caption to put on the image, Triggering curious and optimized for high CTR:\nBest practices:\n1. Use 2–3 bright, contrasting colors—pick one bold accent.  \n2. HD, ultra‑crisp realism, no blur anywhere.  \n3. Close‑up on boss’s face, strong visible emotion (smug, shocked, fearful).  \n4. Include 1–2 concrete props from script (e.g., crumpled paper, spilled coffee mug).  \n5. Show a single action moment (e.g., boss gripping papers, throwing chair).  \n6. Dramatic, high‑contrast lighting to sculpt features.  \n7. Simple blurred background—no text overlays or UI elements.  \n8. Focal point must be boss’s face and the one prop/action.  \n9. Accurate to the script—no abstract metaphors.\n\nScript: {{ $json.text }}\nNews: {{ $('Get row(s) in sheet5').item.json.News }}\n\nDo not include any other fields or text outside the JSON.  ",
        "hasOutputParser": true,
        "needsFallback": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        3504,
        512
      ],
      "id": "c35b5321-803a-4afa-8615-a4f7d2a71a7d",
      "name": "Thumbnail1",
      "executeOnce": true,
      "retryOnFail": true,
      "notesInFlow": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert in YouTube SEO and audience targeting, specializing in crafting high-performing video metadata for storytelling videos. Your task is to generate a YouTube description, a list of keyword tags, a set of search keywords, and a TTS tone description for a standalone storytelling video about \"The Worst Boss Ever,\" designed for burnt-out employees, unemployed workers under 60, or those frustrated with corporate culture. The output is based on a provided title, script, and news-based input (a real-world event or incident inspiring the video).\n\nTask: Generate the following:\n\n\n\n\n\nYouTube Description:\n\n\n\n\n\n2–3 paragraphs, max 300 words.\n\n\n\nSummarize the story concisely, highlighting key plot points and emotional stakes.\n\n\n\nInclude 3–5 natural keyword phrases (e.g., toxic workplace, bad boss stories, workplace injustice) for SEO, woven organically into the text.\n\n\n\nEmphasize emotional triggers (e.g., injustice, corporate greed, employee struggle, workplace trauma) to resonate with the target audience.\n\n\n\nEnd with an engaging question or comment prompt to drive viewer interaction (e.g., “Have you faced a boss like this?”).\n\n\n\nYouTube Tags:\n\n\n\n\n\nMax 15 tags, each prepended with # (e.g., #toxicworkplace).\n\n\n\nCombine emotional tags (e.g., #workplacestress), topic-based tags (e.g., #badboss), and trending tags relevant to the news or script.\n\n\n\nUse both broad terms (e.g., #jobburnout) and specific ones (e.g., #worstbossoever).\n\n\n\nEnsure tags are short, relevant, and JSON-safe.\n\n\n\nSearch Keywords:\n\n\n\n\n\n5–10 searchable phrases viewers might type into YouTube.\n\n\n\nInclude short-tail (e.g., “bad boss”) and long-tail keywords (e.g., “how to survive a toxic boss”).\n\n\n\nDraw from the news, title, and script for relevance.\n\n\n\nTTS Tone:\n\n\n\n\n\n50–70 words describing the tone for a Text-to-Speech narrator.\n\n\n\nBase the tone on the script’s emotional and narrative style (e.g., conversational, dramatic, empathetic).\n\n\n\nHighlight how to emphasize key moments (e.g., outrage during conflict, triumph in resolution).\n\nContext & Behavior Guidelines:\n\n\n\n\n\nTreat tags as metadata for minor categorization, prepending # to each for easy copying into YouTube descriptions.\n\n\n\nTreat keywords as search intent drivers to optimize YouTube’s recommendation algorithm.\n\n\n\nEnsure the description is keyword-rich but natural, avoiding stuffing, and reflects the news and script’s themes.\n\n\n\nGround the output in the news input for realism and emotional resonance.\n\n\n\nIf news content is missing or invalid, use a generic bad-boss scenario (e.g., a manager firing employees for minor infractions) and note in the description: “Inspired by common workplace issues due to unavailable news data.”\n\nInputs:\n\n\n\n\n\nTitle: {{ $('Title1').item.json.text }}\n\n\n\nScript: {{ $('Basic LLM Chain5').item.json.text }}\n\n\n\nNews Content: {{ $('Get row(s) in sheet5').item.json.News }}\n\n\n\nIf inputs are missing or invalid, use the default title “The Worst Boss Ever” and the generic bad-boss scenario above.\n\nOutput Format: Generate exactly one JSON object with these fields:\n\n\n\n\n\ndescription: A string containing the 2–3 paragraph description, max 300 words.\n\n\n\ntags: An array of 15 or fewer strings, each starting with #, e.g., [\"#toxicworkplace\", \"#badboss\"].\n\n\n\nkeywords: An array of 5–10 searchable keyword phrases, e.g., [\"bad boss\", \"toxic workplace stories\"].\n\n\n\ntone: A 50–70 word string describing the TTS tone based on the script.\n\nJSON Output Rules:\n\n\n\n\n\nOutput a single JSON object with only description, tags, keywords, and tone at the root level, e.g., {\"description\": \"...\", \"tags\": [...], \"keywords\": [...], \"tone\": \"...\"}.\n\n\n\nDo not include nesting (e.g., {\"output\": {...}}), additional fields, comments, or explanations.\n\n\n\nEnsure all fields contain valid text strings, free of:\n\n\n\n\n\nUnescaped double quotes (\"); use single quotes (') or escaped double quotes (\\\") in text.\n\n\n\nBackslashes (\\) unless part of valid JSON escapes (e.g., \\\", \\\\).\n\n\n\nControl characters (e.g., newlines \\n, tabs \\t, carriage returns \\r).\n\n\n\nEach field must be non-empty; tags and keywords must be arrays of strings; description and tone must be single continuous strings.\n\n\n\nValidate that description is ≤300 words, tags ≤15 items, keywords 5–10 items, and tone 50–70 words.\n\nExample Output:\n\n{\n\t\"description\": \"Ever worked for a boss who made every day a nightmare? In this gripping story, Taylor faces Greg, a manager who fires employees for the smallest mistakes, like taking a sick day. Inspired by common workplace issues due to unavailable news data, this tale of toxic leadership and employee resilience will hit home. From crushing micromanagement to a triumphant stand, see how Taylor fights back. Have you faced a boss like this? Comment below!\",\n  \"tags\": \"#badboss, #worstbossoever, #workplacestress \",\n  \"keywords\": \"string\",\n  \"tone\": \"a tone\"\n}\n\n⚠️ Output only the JSON object with the description, tags, keywords, and tone fields, strictly adhering to the JSON output rules.",
        "hasOutputParser": true,
        "needsFallback": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        3840,
        512
      ],
      "id": "df021f04-72c3-4fac-8bf9-b8680ef4654f",
      "name": "Decs, Tags1",
      "retryOnFail": true
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Title": "={{ $('Title1').item.json.text }}",
            "image prompt": "={{ $('Thumbnail1').item.json.output['image prompt'] }}",
            "News": "={{ $('Get row(s) in sheet5').item.json.News }}",
            "row_number": 0,
            "script": "={{ $('Basic LLM Chain5').item.json.text }}",
            "tone": "={{ $json.output.tone }}",
            "decs": "={{ $('Decs, Tags1').item.json.output.description }}",
            "keywords": "={{ $('Decs, Tags1').item.json.output.keywords }}",
            "tags": "={{ $('Decs, Tags1').item.json.output.tags }}",
            "text overlay": "={{ $('Thumbnail1').item.json.output['text overlay'] }}"
          },
          "matchingColumns": [
            "News"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "script",
              "displayName": "script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "tone",
              "displayName": "tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "decs",
              "displayName": "decs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "keywords",
              "displayName": "keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "image prompt",
              "displayName": "image prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "text overlay",
              "displayName": "text overlay",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "story image",
              "displayName": "story image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ThumbCheck",
              "displayName": "ThumbCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ImageCheck",
              "displayName": "ImageCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tts-check",
              "displayName": "tts-check",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "News",
              "displayName": "News",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "done",
              "displayName": "done",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "cellFormat": "USER_ENTERED"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        4176,
        512
      ],
      "id": "dc32bfb6-8577-4263-b8b2-2906026d8752",
      "name": "Upload to Sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert YouTube Script Writer specializing in crafting immersive storytime scripts for YouTube videos. Your goal is to create a 4,000–5,000 word (approximately 30–40 minutes when narrated) script about \"The Worst Boss Ever\" that captivates burnt-out employees and unemployed workers under 60, driving them to subscribe or watch more videos. The script must be original, emotionally gripping, and inspired by real-world news provided in the prompt, which offers context, characters, or themes (e.g., toxic leadership, unfair policies, workplace abuse).\n\nTask: Write a narrated storytime script with this structure:\n\n\n\n\n\nHook: A 1–2 sentence opening that grabs attention with a shocking fact, provocative question, or vivid emotional statement, creating an urgent information gap.\n\n\n\nIntro: Preview the story in 2–3 sentences, establishing an open loop to hook viewers on the outcome. Introduce \"The Worst Boss Ever\" and tease a high-stakes conflict.\n\n\n\nBody/Explanation: Deliver a vivid, immersive story, including:\n\n\n\n\n\nNatural, relatable dialogue to humanize characters and drive the narrative.\n\n\n\nSpecific details (e.g., names, places, dates) to ground the story in reality.\n\n\n\nMetaphors, sensory details, and emotional beats to evoke outrage, empathy, or triumph.\n\n\n\nStay tightly focused on the workplace conflict, avoiding unrelated tangents.\n\n\n\nProblem/Challenge: Early on, introduce the core conflict (e.g., the boss’s abusive behavior, unfair treatment, or unethical actions) to cement their \"worst\" status.\n\n\n\nExploration/Development: Escalate tension by showing the boss’s actions devastating the protagonist or coworkers, with mounting personal and professional stakes over multiple incidents.\n\n\n\nClimax/Key Moment: Deliver a gripping, satisfying peak moment, such as a bold confrontation, a critical revelation, or a turning point where the protagonist fights back or finds resolution.\n\n\n\nConclusion/Summary: Provide closure with a clear outcome and a relatable lesson or moral, leaving viewers inspired or validated.\n\n\n\nCall to Action: End with a one-sentence prompt to subscribe or watch more, e.g., \"If this story hit home, subscribe for more workplace dramas!\"\n\nTone and Style:\n\n\n\n\n\nUse a raw, conversational tone that feels like a friend sharing a jaw-dropping story.\n\n\n\nWeave in idioms, metaphors, and anecdotes for relatability and emotional depth.\n\n\n\nInclude subtle humor where it amplifies the absurdity of the boss’s actions, without diluting the story’s weight.\n\n\n\nUse simple, punchy words and sentences for an audience with under-12 comprehension.\n\n\n\nAvoid robotic phrases, stage directions, headings, or parentheses.\n\nAdditional Guidelines:\n\n\n\n\n\nWrite from the first-person perspective of an employee facing \"The Worst Boss Ever\" to maximize relatability and emotional connection.\n\n\n\nCraft an original, fictional story inspired by common bad-boss tropes (e.g., micromanagement, favoritism, unjust firings) and the provided news content, tailored to resonate with burnt-out or jobless viewers.\n\n\n\nPortray the boss’s behavior as unmistakably wrong, without excusing it or using harmful stereotypes.\n\n\n\nEmbed a clear, empowering moral in the conclusion, e.g., standing up for oneself or prioritizing mental health.\n\n\n\nIf news content is missing or invalid, use a generic bad-boss scenario (e.g., a manager firing employees for minor infractions) and note in the script: \"This story is inspired by common workplace issues due to unavailable news data.\"\n\nAdditional Notes:\n\n\n\n\n\nThe script must be 4,000–5,000 words, with tight pacing to maintain viewer engagement across sections.\n\n\n\nUse sensory details, internal monologues, and character arcs to create an immersive, cinematic experience.\n\n\n\nEnsure the script adapts to various titles while preserving core storytelling principles.\n\n\n\nAvoid any symbols that could disrupt text output, such as unescaped double quotes (\") or control characters (e.g., newlines \\n, tabs \\t, carriage returns \\r); use single quotes (') for dialogue.\n\nInputs:\n\n\n\n\n\nTitle: {{ $json.text }}\n\n\n\nNews Content: {{ $('Get row(s) in sheet5').item.json.News }}\n\n\n\nIf inputs are missing or invalid, use the default title \"The Worst Boss Ever\" and the generic bad-boss scenario above.\n\nOutput Format: Output only the plain text script, with no JSON formatting, comments, explanations, or additional text. The script must be a single continuous string of 4,000–5,000 words, including all required story elements, and free of disruptive symbols.\n\nExample Output: I thought I knew bad bosses until I met Greg. My first day at Apex Solutions felt like a dream, but that dream turned into a nightmare fast. 'You're late,' Greg growled, even though I was five minutes early. It was March 2025, and I was desperate for this job, but Greg was about to make me regret ever signing on... [full 4,000–5,000 word script continues]\n\n⚠️ Output only the plain text script, with no additional content or formatting.",
        "needsFallback": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are an expert YouTube Script Writer specializing in crafting immersive storytime scripts for YouTube videos. Your goal is to create a 4,000–5,000 word (approximately 30–40 minutes when narrated) script about \"The Worst Boss Ever\" that captivates burnt-out employees and unemployed workers under 60, driving them to subscribe or watch more videos. The script must be original, emotionally gripping, and inspired by real-world news provided in the prompt, which offers context, characters, or themes (e.g., toxic leadership, unfair policies, workplace abuse).\n\nTask: Write a narrated storytime script with this structure:\n\n\n\n\n\nHook: A 1–2 sentence opening that grabs attention with a shocking fact, provocative question, or vivid emotional statement, creating an urgent information gap.\n\n\n\nIntro: Preview the story in 2–3 sentences, establishing an open loop to hook viewers on the outcome. Introduce \"The Worst Boss Ever\" and tease a high-stakes conflict.\n\n\n\nBody/Explanation: Deliver a vivid, immersive story, including:\n\n\n\n\n\nNatural, relatable dialogue to humanize characters and drive the narrative.\n\n\n\nSpecific details (e.g., names, places, dates) to ground the story in reality.\n\n\n\nMetaphors, sensory details, and emotional beats to evoke outrage, empathy, or triumph.\n\n\n\nStay tightly focused on the workplace conflict, avoiding unrelated tangents.\n\n\n\nProblem/Challenge: Early on, introduce the core conflict (e.g., the boss’s abusive behavior, unfair treatment, or unethical actions) to cement their \"worst\" status.\n\n\n\nExploration/Development: Escalate tension by showing the boss’s actions devastating the protagonist or coworkers, with mounting personal and professional stakes over multiple incidents.\n\n\n\nClimax/Key Moment: Deliver a gripping, satisfying peak moment, such as a bold confrontation, a critical revelation, or a turning point where the protagonist fights back or finds resolution.\n\n\n\nConclusion/Summary: Provide closure with a clear outcome and a relatable lesson or moral, leaving viewers inspired or validated.\n\n\n\nCall to Action: End with a one-sentence prompt to subscribe or watch more, e.g., \"If this story hit home, subscribe for more workplace dramas!\"\n\nTone and Style:\n\n\n\n\n\nUse a raw, conversational tone that feels like a friend sharing a jaw-dropping story.\n\n\n\nWeave in idioms, metaphors, and anecdotes for relatability and emotional depth.\n\n\n\nInclude subtle humor where it amplifies the absurdity of the boss’s actions, without diluting the story’s weight.\n\n\n\nUse simple, punchy words and sentences for an audience with under-12 comprehension.\n\n\n\nAvoid robotic phrases, stage directions, headings, or parentheses.\n\nAdditional Guidelines:\n\n\n\n\n\nWrite from the first-person perspective of an employee facing \"The Worst Boss Ever\" to maximize relatability and emotional connection.\n\n\n\nCraft an original, fictional story inspired by common bad-boss tropes (e.g., micromanagement, favoritism, unjust firings) and the provided news content, tailored to resonate with burnt-out or jobless viewers.\n\n\n\nPortray the boss’s behavior as unmistakably wrong, without excusing it or using harmful stereotypes.\n\n\n\nEmbed a clear, empowering moral in the conclusion, e.g., standing up for oneself or prioritizing mental health.\n\n\n\nIf news content is missing or invalid, use a generic bad-boss scenario (e.g., a manager firing employees for minor infractions) and note in the script: \"This story is inspired by common workplace issues due to unavailable news data.\"\n\nAdditional Notes:\n\n\n\n\n\nThe script must be 4,000–5,000 words, with tight pacing to maintain viewer engagement across sections.\n\n\n\nUse sensory details, internal monologues, and character arcs to create an immersive, cinematic experience.\n\n\n\nEnsure the script adapts to various titles while preserving core storytelling principles.\n\n\n\nAvoid any symbols that could disrupt text output, such as unescaped double quotes (\") or control characters (e.g., newlines \\n, tabs \\t, carriage returns \\r); use single quotes (') for dialogue.\n\nInputs:\n\n\n\n\n\nTitle: {{ $json.text }}\n\n\n\nNews Content: {{ $('Get row(s) in sheet5').item.json.News }}\n\n\n\nIf inputs are missing or invalid, use the default title \"The Worst Boss Ever\" and the generic bad-boss scenario above.\n\nOutput Format: Output only the plain text script, with no JSON formatting, comments, explanations, or additional text. The script must be a single continuous string of 4,000–5,000 words, including all required story elements, and free of disruptive symbols.\n\nExample Output: I thought I knew bad bosses until I met Greg. My first day at Apex Solutions felt like a dream, but that dream turned into a nightmare fast. 'You're late,' Greg growled, even though I was five minutes early. It was March 2025, and I was desperate for this job, but Greg was about to make me regret ever signing on... [full 4,000–5,000 word script continues]\n\n⚠️ Output only the plain text script, with no additional content or formatting."
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        4112,
        336
      ],
      "id": "b0b74267-fea5-4e82-839c-e4b695a641ed",
      "name": "Basic LLM Chain5",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "return Array.from({ length: 10 }, (_, i) => {\n  return { json: { index: i + 1 } };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3312,
        336
      ],
      "id": "c5e9a9db-c00a-4123-91ed-3ca1ac089f64",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3456,
        336
      ],
      "id": "cc93b672-810b-4611-b169-5b03717598cc",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "return Array.from({ length: 10 }, (_, i) => {\n  return { json: { index: i + 1 } };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3584,
        1072
      ],
      "id": "db6b7a8b-8641-43a0-a3df-ffad209c93b2",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3696,
        1072
      ],
      "id": "cc1ca95b-7152-4d99-8613-2560a23f28a4",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4384,
        512
      ],
      "id": "3cc6d2d9-ae5d-49a6-aabb-028bf63afc53",
      "name": "Wait",
      "webhookId": "2210a5af-42a4-4ccb-9195-6e993b8e119a"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"script\": \"California\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        4784,
        496
      ],
      "id": "d6a7c0c1-9aaa-408d-8aeb-70819a31c44b",
      "name": "Structured Output Parser8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "api_success",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "64da1ea1-59fb-42f6-90fc-9468f5470bf1",
      "name": "Check API 1 Result",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7792,
        1392
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "api_success",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "7348e2f5-d8c1-4052-b520-e9a02ec0b1e0",
      "name": "Check API 2 Result",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7952,
        1536
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:streamGenerateContent?key=AIzaSyDP3UArwKecPGTg0t3zE3eQuuhx7_eledE",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Say in a {{ $('Get row(s) in sheet2').item.json.tone }} tone : {{ $('Code11').item.json.chunk }}\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"responseModalities\": [\"audio\"],\n    \"temperature\": 1,\n    \"speech_config\": {\n      \"voice_config\": {\n        \"prebuilt_voice_config\": {\n          \"voice_name\": \"{{ $('Code9').item.json.selected_voice }}\"\n        }\n      }\n    }\n  }\n}\n",
        "options": {
          "timeout": 1800000
        }
      },
      "id": "1988e2e2-d7a9-4b05-bef8-0e915e0a9f98",
      "name": "TTS API 3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7792,
        1664
      ],
      "alwaysOutputData": true,
      "continueOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:streamGenerateContent?key=AIzaSyAtRcXkW6ii_nPqMndzoIGzJbKEQiMU5Zk",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Say in a {{ $('Get row(s) in sheet2').item.json.tone }} tone : {{ $('Code11').item.json.chunk }}\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"responseModalities\": [\"audio\"],\n    \"temperature\": 1,\n    \"speech_config\": {\n      \"voice_config\": {\n        \"prebuilt_voice_config\": {\n          \"voice_name\": \"{{ $('Code9').item.json.selected_voice }}\"\n        }\n      }\n    }\n  }\n}\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 5,
              "batchInterval": 2000
            }
          },
          "timeout": 1800000
        }
      },
      "id": "4a1c63eb-45f9-4b64-a781-b764b2f586be",
      "name": "TTS API 4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7792,
        1792
      ],
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "api_success",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "5fb56557-ea11-431e-bd51-99511b84b6c7",
      "name": "Check API 3 Result",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7952,
        1664
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "api_success",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "782d0e6f-7348-40ac-bdf4-98ed0c3607c1",
      "name": "Check API 4 Result",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7952,
        1792
      ]
    },
    {
      "parameters": {
        "jsCode": "// Log which API was successful for monitoring\nconst apiUsed = $input.all().find(item => !item.json.error);\nif (apiUsed) {\n  console.log(`Successfully used API: ${apiUsed.node}`);\n}\n\n// Pass through the successful result\nreturn $input.all().filter(item => !item.json.error);"
      },
      "id": "571bdfec-c35b-47cd-ad52-d1e54275ad2c",
      "name": "Merge Successful Result",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8272,
        1376
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        6480,
        1392
      ],
      "id": "fc500a1b-e590-480e-a1e3-f6b15898091a",
      "name": "TTS"
    },
    {
      "parameters": {
        "jsCode": "// Random Voice Selection for TTS\nconst voices = [\n  \"Zephyr\", \"Puck\", \"Charon\", \"Kore\", \"Fenrir\", \"Leda\", \"Orus\", \"Aoede\",\n  \"Callirrhoe\", \"Autonoe\", \"Enceladus\", \"Iapetus\", \"Umbriel\", \"Algieba\",\n  \"Despina\", \"Erinome\", \"Algenib\", \"Rasalgethi\", \"Laomedeia\", \"Achernar\",\n  \"Alnilam\", \"Schedar\", \"Gacrux\", \"Pulcherrima\", \"Achird\", \"Zubenelgenubi\",\n  \"Vindemiatrix\", \"Sadachbia\", \"Sadaltager\", \"Sulafat\"\n];\n\n// Pick a random voice\nconst randomVoice = voices[Math.floor(Math.random() * voices.length)];\n\n// Return the existing data plus the selected voice\nreturn items.map(item => ({\n  json: {\n    ...item.json,\n    selected_voice: randomVoice\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7184,
        1392
      ],
      "id": "41100423-cf9b-48c6-9d98-f079341dc2ed",
      "name": "Code9"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 5
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        2176,
        448
      ],
      "id": "988bcbef-5a5e-4355-8966-f4a67e909a7e",
      "name": "Generate content"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 1
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        3440,
        1072
      ],
      "id": "1dbf0f20-9a6a-48eb-90e7-360522169b8a",
      "name": "Story-Image"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 5
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        3152,
        336
      ],
      "id": "76981c1b-8262-42bc-b231-f6c82cb7fdb5",
      "name": "Content-StoryImage Loop"
    },
    {
      "parameters": {
        "jsCode": "return Array.from({ length: 10 }, (_, i) => {\n  return { json: { index: i + 1 } };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6608,
        1392
      ],
      "id": "7719453b-ff94-40a5-bfd2-777177ebb0e0",
      "name": "Code10"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        6720,
        1392
      ],
      "id": "5ec13ab8-8768-4514-87ec-1ee0cc88e2a2",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f s16le -ar 24000 -ac 1 -i \"/files/Story image/{{ $json.row_number }}/audio_{{ $json.row_number }}_{{ $json.part_index }}.pcm\" \"/files/Story image/{{ $json.row_number }}/audio_{{ $json.row_number }}_{{ $json.part_index }}.mp3\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        6928,
        2464
      ],
      "id": "826ee375-c80c-426c-9b66-6391dabe8260",
      "name": "Convert to mp"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "candidates[0].content.parts[0].inlineData.data",
        "options": {
          "fileName": "=\"fileName\": \"=audio_{{ $json.row_number }}_{{ $json.part_index }}.pcm\n\n"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        6480,
        2464
      ],
      "id": "57a38adc-7ce8-4332-b319-a5bcf892a3b4",
      "name": "Convert to PCM File1"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=\"fileName\": \"=/files/Story image/{{ $('Get row(s) in sheet7').item.json.row_number }}/audio_{{ $('Get row(s) in sheet7').item.json.row_number }}_{{ $('Merge Successful Result1').item.json.candidates }}.pcm\"\n",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        6704,
        2464
      ],
      "id": "8d6d5ddf-0e79-4a66-9754-3f8ca5875e59",
      "name": "Write Files to VPS1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "tts-check"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        4320,
        2368
      ],
      "id": "e772921a-0f8d-4c0a-8b70-bf5825f4b69d",
      "name": "Get row(s) in sheet7",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const raw = $input.first().json.script;\n\n  const cleaned_script = typeof raw === 'string'\n    ? raw\n        .replace(/\\\\/g, '\\\\\\\\')   // Escape backslashes\n        .replace(/\"/g, '\\\\\"')     // Escape double quotes\n        .replace(/\\r?\\n/g, ' ')   // Remove line breaks\n        .trim()\n    : raw;\n\n\n  return {\n    json: {\n      cleaned_script: cleaned_script\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4480,
        2368
      ],
      "id": "62f4c47b-3c60-4437-a2cb-ac61807a9c86",
      "name": "Code12"
    },
    {
      "parameters": {
        "command": "=rm \"/files/Story image/{{ $json.row_number }}/audio_{{ $json.row_number }}_{{ $json.part_index }}.pcm\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7152,
        2464
      ],
      "id": "5e3b1335-588e-4a1f-979f-b403fdf2d149",
      "name": "Execute Command2"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tts-check": "yes",
            "row_number": "={{ $('Get row(s) in sheet7').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "script",
              "displayName": "script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tone",
              "displayName": "tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "decs",
              "displayName": "decs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "keywords",
              "displayName": "keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image prompt",
              "displayName": "image prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text overlay",
              "displayName": "text overlay",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "story image",
              "displayName": "story image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ThumbCheck",
              "displayName": "ThumbCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ImageCheck",
              "displayName": "ImageCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tts-check",
              "displayName": "tts-check",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "News",
              "displayName": "News",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "done",
              "displayName": "done",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        8304,
        2464
      ],
      "id": "a978ff8c-be0f-4151-be85-bff2cff575be",
      "name": "Update row in sheet4",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:streamGenerateContent?key=AIzaSyAb8HOXHoG0zTSEsmpAMuXMbLLHmHCxzsE",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Say in a {{ $('Get row(s) in sheet7').item.json.tone }} tone : {{ $('Code15').item.json.chunk }}\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"responseModalities\": [\"audio\"],\n    \"temperature\": 1,\n    \"speech_config\": {\n      \"voice_config\": {\n        \"prebuilt_voice_config\": {\n          \"voice_name\": \"{{ $('Code13').item.json.selected_voice }}\"\n        }\n      }\n    }\n  }\n}\n",
        "options": {
          "timeout": 1800000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5264,
        2512
      ],
      "id": "05e4558d-f1a8-4e2a-adc2-905e58289f23",
      "name": "tts-",
      "retryOnFail": false,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:streamGenerateContent?key=AIzaSyDtuw7IB60TQJhcNXria7OSYR8TSbFfGOwa",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Say in a {{ $('Get row(s) in sheet7').item.json.tone }} tone : {{ $json.chunk }}\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"responseModalities\": [\"audio\"],\n    \"temperature\": 1,\n    \"speech_config\": {\n      \"voice_config\": {\n        \"prebuilt_voice_config\": {\n          \"voice_name\": \"{{ $json.selected_voice }}\"\n        }\n      }\n    }\n  }\n}\n",
        "options": {
          "timeout": 1800000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5120,
        2368
      ],
      "id": "d9fca040-67cb-4a8d-aeda-d5f6288118db",
      "name": "tts-3",
      "retryOnFail": false,
      "alwaysOutputData": true,
      "executeOnce": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "api_success",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "720d97b6-3505-423c-81ae-4adbd3188cbf",
      "name": "Check API 1 Result1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5264,
        2368
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "api_success",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "55a6337e-882a-4ae4-9bac-90a47e9f4c17",
      "name": "Check API 2 Result1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5424,
        2512
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:streamGenerateContent?key=AIzaSyDP3UArwKecPGTg0t3zE3eQuuhx7_eledE",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Say in a {{ $('Get row(s) in sheet7').item.json.tone }} tone : {{ $('Code15').item.json.chunk }}\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"responseModalities\": [\"audio\"],\n    \"temperature\": 1,\n    \"speech_config\": {\n      \"voice_config\": {\n        \"prebuilt_voice_config\": {\n          \"voice_name\": \"{{ $('Code13').item.json.selected_voice }}\"\n        }\n      }\n    }\n  }\n}\n",
        "options": {
          "timeout": 1800000
        }
      },
      "id": "18f89833-e6d3-4012-9a1f-b91d6dad8a49",
      "name": "TTS API ",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5264,
        2640
      ],
      "alwaysOutputData": true,
      "continueOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:streamGenerateContent?key=AIzaSyAtRcXkW6ii_nPqMndzoIGzJbKEQiMU5Zk",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Say in a {{ $('Get row(s) in sheet7').item.json.tone }} tone : {{ $('Code15').item.json.chunk }}\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"responseModalities\": [\"audio\"],\n    \"temperature\": 1,\n    \"speech_config\": {\n      \"voice_config\": {\n        \"prebuilt_voice_config\": {\n          \"voice_name\": \"{{ $('Code13').item.json.selected_voice }}\"\n        }\n      }\n    }\n  }\n}\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 5,
              "batchInterval": 2000
            }
          },
          "timeout": 1800000
        }
      },
      "id": "059c7c70-78ee-428e-bb6b-9e84d37fcec2",
      "name": "TTS API 5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5264,
        2768
      ],
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "api_success",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "d31e2002-88e2-4986-a56b-265dcbb55f11",
      "name": "Check API 3 Result1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5424,
        2640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "api_success",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "eb4f4614-856e-4266-b6ad-00f46d88c257",
      "name": "Check API 4 Result1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5424,
        2768
      ]
    },
    {
      "parameters": {
        "jsCode": "// Log which API was successful for monitoring\nconst apiUsed = $input.all().find(item => !item.json.error);\nif (apiUsed) {\n  console.log(`Successfully used API: ${apiUsed.node}`);\n}\n\n// Pass through the successful result\nreturn $input.all().filter(item => !item.json.error);"
      },
      "id": "58ea3307-a3e6-4469-bbf0-5a7472e33b10",
      "name": "Merge Successful Result1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5744,
        2352
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        3952,
        2368
      ],
      "id": "adb74a4c-9fdd-4e5e-9be3-43f23cd6d4be",
      "name": "TTS1"
    },
    {
      "parameters": {
        "jsCode": "// Random Voice Selection for TTS\nconst voices = [\n  \"Zephyr\", \"Puck\", \"Charon\", \"Kore\", \"Fenrir\", \"Leda\", \"Orus\", \"Aoede\",\n  \"Callirrhoe\", \"Autonoe\", \"Enceladus\", \"Iapetus\", \"Umbriel\", \"Algieba\",\n  \"Despina\", \"Erinome\", \"Algenib\", \"Rasalgethi\", \"Laomedeia\", \"Achernar\",\n  \"Alnilam\", \"Schedar\", \"Gacrux\", \"Pulcherrima\", \"Achird\", \"Zubenelgenubi\",\n  \"Vindemiatrix\", \"Sadachbia\", \"Sadaltager\", \"Sulafat\"\n];\n\n// Pick a random voice\nconst randomVoice = voices[Math.floor(Math.random() * voices.length)];\n\n// Return the existing data plus the selected voice\nreturn items.map(item => ({\n  json: {\n    ...item.json,\n    selected_voice: randomVoice\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4656,
        2368
      ],
      "id": "092ddd5e-e358-4be8-ba25-2abf7605689f",
      "name": "Code13"
    },
    {
      "parameters": {
        "jsCode": "return Array.from({ length: 8 }, (_, i) => {\n  return { json: { index: i + 1 } };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4080,
        2368
      ],
      "id": "e24222ff-1d96-4a73-a9a0-c11b8124c7c8",
      "name": "Code14"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        4192,
        2368
      ],
      "id": "835eb27f-66b1-497d-a60d-fdc16ac7b22c",
      "name": "Loop Over Items4"
    },
    {
      "parameters": {
        "jsCode": "const text = $json.cleaned_script;\nconst chunkSize = 1500;\n\nconst regex = new RegExp(`.{1,${chunkSize}}(\\\\s|$)`, 'g');\nconst chunks = text.match(regex).filter(x => x.trim() !== '');\n\nreturn chunks.map((chunk, index) => ({\n  json: {\n    chunk,\n    tone: $json.tone,\n    selected_voice: $json.selected_voice,\n    part_index: index\n  }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4864,
        2368
      ],
      "id": "4abb351a-dd9d-45cf-b6f2-5ab894724f05",
      "name": "Code15"
    },
    {
      "parameters": {
        "jsCode": "const row = $json.row_number;\nconst partCount =  $items().length;\n\nreturn [{\n  json: {\n    path: `/files/Story image/${row}/concat.txt`,\n    content: Array.from({ length: partCount }, (_, i) => `file 'audio_${row}_${i}.mp3'`).join('\\n'),\n    row_number: row\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7360,
        2464
      ],
      "id": "dd081fd4-aafe-4a64-b749-0596294b8f1e",
      "name": "Generate concat list"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ $json.path }}",
        "dataPropertyName": "={{ $json.content }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        7568,
        2464
      ],
      "id": "d6add1b2-511c-40e6-b7f5-2a29f526d245",
      "name": "Write Files to VPS2"
    },
    {
      "parameters": {
        "command": "=ffmpeg -f concat -safe 0 -i \"/files/Story image/{{ $json.row_number }}/concat.txt\" -c copy \"/files/Story image/{{ $json.row_number }}/final_output.mp3\"\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        7776,
        2464
      ],
      "id": "ccbf50b7-94b9-4dc2-93b1-57a14cdc33e8",
      "name": "Merge MP3s"
    },
    {
      "parameters": {
        "jsCode": "return items.map((item, index) => {\n  return {\n    json: {\n      ...item.json,\n      part_index: index\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5952,
        2352
      ],
      "id": "476a2bce-532f-4f80-9daf-a2ca64f8b311",
      "name": "Code16"
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        9904,
        1488
      ],
      "id": "da1852f2-11d4-4650-998a-7ab8fbf5d97b",
      "name": "Wait1",
      "webhookId": "50ec4814-e2a5-40c6-b22c-f4d4a8c3ac99"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        720,
        1088
      ],
      "id": "52e3b67b-947a-41ee-9d7c-c63fd0924891",
      "name": "script-1"
    },
    {
      "parameters": {
        "url": "={{ $json.urls }}",
        "options": {
          "ignoreSSL": true
        }
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        1024,
        608
      ],
      "id": "9dbe04d9-63c8-4939-888a-c83ac2a0dd35",
      "name": "RSS Read1"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        5072,
        1600
      ],
      "id": "0eba5e1c-7059-4bc6-84e6-61294e0b18b8",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "authentication": "predefinedCredentialType",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        128
      ],
      "id": "0649d452-5dc5-4d24-b889-14bcd0ce430b",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "articles",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        240,
        608
      ],
      "id": "cc8a1b52-955f-4487-a17f-a7f8637bbb5f",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1937569639,
          "mode": "list",
          "cachedResultName": "temp",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=1937569639"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ $json.title }}",
            "link": "={{ $json.url }}",
            "contentSnippet": "={{ $json.description }}",
            "pubDate": "={{ $json.publishedAt }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "contentSnippet",
              "displayName": "contentSnippet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        416,
        608
      ],
      "id": "41e7782c-0957-4897-8d61-2304141cb816",
      "name": "Append row in sheet3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://newsapi.org/v2/top-headlines",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "country",
              "value": "us"
            },
            {
              "name": "category",
              "value": "business"
            },
            {
              "name": "pageSize",
              "value": "50"
            },
            {
              "name": "apiKey",
              "value": "b7e5b6d939ea4a8b82aaba4f461350d5"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        416,
        384
      ],
      "id": "d8ad0468-29a3-4f9c-8711-5919cf2f4391",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        224,
        384
      ],
      "id": "68098d74-0840-4efd-b2ed-19a5f06f7e16",
      "name": "Schedule Trigger4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a professional content analyst for a YouTube storytelling team.\n\nYour job is to act as a **news filter**, not a title generator or thumbnail creator.\n\nYou must carefully read through 10 news articles provided in JSON format and select exactly **2** that can inspire emotionally rich, dramatic Storytime scripts for the theme: **“The Worst Boss Ever.”**\n\nPrioritize:\n- Real stories of toxic bosses, unethical managers, or power-abusing leadership.\n- OR news about U.S. workplace issues, such as union struggles, labor laws, or economic policies that could impact employees or cause workplace conflict.\n\nFor each of the 2 selected articles, write:\n- summary: a ~100-character sentence focused on **why this article is relevant**, including conflict, workplace impact, or the abusive system at play.\n\n\nThese are the 10 articles:\n{{ JSON.stringify($json.articles) }}\n",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1936,
        1904
      ],
      "id": "bd8d7c42-ac1e-4757-8cd6-25c9f41b6103",
      "name": "Basic LLM Chain6"
    },
    {
      "parameters": {
        "options": {
          "numberOfItems": 2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserItemList",
      "typeVersion": 1,
      "position": [
        2688,
        2112
      ],
      "id": "5718e670-2248-4d44-920f-cf39151635dc",
      "name": "Item List Output Parser4"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "News": "={{ $json.text }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "script",
              "displayName": "script",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tone",
              "displayName": "tone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "decs",
              "displayName": "decs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "keywords",
              "displayName": "keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image prompt",
              "displayName": "image prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "text overlay",
              "displayName": "text overlay",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "story image",
              "displayName": "story image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ThumbCheck",
              "displayName": "ThumbCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ImageCheck",
              "displayName": "ImageCheck",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tts-check",
              "displayName": "tts-check",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "News",
              "displayName": "News",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "done",
              "displayName": "done",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2688,
        1792
      ],
      "id": "f0a260cb-55f5-4b0b-a6dd-7644c531de6a",
      "name": "Append row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is",
          "mode": "list",
          "cachedResultName": "Worse boss",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1937569639,
          "mode": "list",
          "cachedResultName": "temp",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1UAa675eUOSO_k6kZs-3bBDBLn5x9qzcQfoIOiI6s-Is/edit#gid=1937569639"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2112,
        1568
      ],
      "id": "7694ac44-7f90-4993-8cb1-a540c66b8543",
      "name": "Get row(s) in sheet10",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "v42RWpJp8O0q9gFz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1952,
        1568
      ],
      "id": "247dba35-66bc-4095-a5b7-2902956ca872",
      "name": "Filter News1"
    },
    {
      "parameters": {
        "batchSize": 10,
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2320,
        1568
      ],
      "id": "70eb0c12-d3bd-45cd-b6ec-4ca3ffc418eb",
      "name": "Loop Over Items5"
    },
    {
      "parameters": {
        "jsCode": "const batchSize = 10;\nconst input = items.map(i => i.json);\nconst batches = [];\n\nfor (let i = 0; i < input.length; i += batchSize) {\n  const batch = input.slice(i, i + batchSize);\n\n  // Make each batch a single item with `articles` key holding a table of rows\n  batches.push({\n    json: {\n      articles: batch.map(article => ({\n        title: article.title,\n        snippet: article.contentSnippet,\n        pubDate: article.pubDate,\n        link: article.link\n      }))\n    }\n  });\n}\n\nreturn batches;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2528,
        1664
      ],
      "id": "210c2705-720e-4821-b7f5-fb9a9b61998a",
      "name": "Code11"
    }
  ],
  "connections": {
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Item List Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Append or update row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "Thumbnail",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain4": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item List Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain4",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet4": {
      "main": [
        [
          {
            "node": "Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser4": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Decs, Tags",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "ytbquy759-2": {
      "ai_languageModel": [
        [
          {
            "node": "Thumbnail",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Decs, Tags",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Basic LLM Chain8",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Decs, Tags1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain6",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "ytbquy759-1": {
      "ai_languageModel": [
        [
          {
            "node": "Title",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Title1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "ytbquy2-1": {
      "ai_languageModel": [
        [
          {
            "node": "Title",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Basic LLM Chain3",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Thumbnail1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Structured Output Parser7",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "ytbquy2-2": {
      "ai_languageModel": [
        [
          {
            "node": "Decs, Tags",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain8",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Structured Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain2",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Decs, Tags1",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "peterhung6558": {
      "ai_languageModel": [
        [
          {
            "node": "Thumbnail",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain3",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Title1",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Basic LLM Chain5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "hoangvanhung06051993": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain4",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain2",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain5",
            "type": "ai_languageModel",
            "index": 1
          },
          {
            "node": "Thumbnail1",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "Get row(s) in sheet6": {
      "main": [
        [
          {
            "node": "Basic LLM Chain8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain8": {
      "main": [
        [
          {
            "node": "Update row in sheet3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser5": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain8",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet8": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet9": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "RSS Read1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet2": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Title": {
      "main": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thumbnail": {
      "main": [
        [
          {
            "node": "Decs, Tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Decs, Tags": {
      "main": [
        [
          {
            "node": "Upload to Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet1": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser6": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain3",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain3": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request9": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "HTTP Request9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request10": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "HTTP Request10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk5": {
      "main": [
        [
          {
            "node": "Update row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Update row in sheet2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        []
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "HTTP Request11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain2": {
      "main": [
        [
          {
            "node": "Thumbnail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Basic LLM Chain3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request12": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "HTTP Request12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to mp3": {
      "main": [
        [
          {
            "node": "Execute Command1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to PCM File": {
      "main": [
        [
          {
            "node": "Write Files to VPS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Files to VPS": {
      "main": [
        [
          {
            "node": "Convert to mp3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet2": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request11": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command1": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tts-1": {
      "main": [
        [
          {
            "node": "Check API 2 Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tts-2": {
      "main": [
        [
          {
            "node": "Check API 1 Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet3": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk1": {
      "main": [
        [
          {
            "node": "Upload a video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get News": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter News": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Thumbnail1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet5": {
      "main": [
        [
          {
            "node": "Title1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser7": {
      "ai_outputParser": [
        [
          {
            "node": "Decs, Tags1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Title1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thumbnail1": {
      "main": [
        [
          {
            "node": "Decs, Tags1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Decs, Tags1": {
      "main": [
        [
          {
            "node": "Upload to Sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain5": {
      "main": [
        [
          {
            "node": "Thumbnail1",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Upload to Sheet1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get row(s) in sheet5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get row(s) in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser8": {
      "ai_outputParser": [
        []
      ]
    },
    "Check API 1 Result": {
      "main": [
        [
          {
            "node": "Merge Successful Result",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "tts-1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check API 2 Result": {
      "main": [
        [
          {
            "node": "Merge Successful Result",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TTS API 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check API 3 Result": {
      "main": [
        [
          {
            "node": "Merge Successful Result",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TTS API 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check API 4 Result": {
      "main": [
        [
          {
            "node": "Merge Successful Result",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "TTS API 3": {
      "main": [
        [
          {
            "node": "Check API 3 Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS API 4": {
      "main": [
        [
          {
            "node": "Check API 4 Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Successful Result": {
      "main": [
        [
          {
            "node": "Convert to PCM File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "tts-2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate content": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Story-Image": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content-StoryImage Loop": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Get row(s) in sheet2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to mp": {
      "main": [
        [
          {
            "node": "Execute Command2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to PCM File1": {
      "main": [
        [
          {
            "node": "Write Files to VPS1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Files to VPS1": {
      "main": [
        [
          {
            "node": "Convert to mp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet7": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command2": {
      "main": [
        [
          {
            "node": "Generate concat list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet4": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tts-": {
      "main": [
        [
          {
            "node": "Check API 2 Result1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tts-3": {
      "main": [
        [
          {
            "node": "Check API 1 Result1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check API 1 Result1": {
      "main": [
        [
          {
            "node": "Merge Successful Result1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "tts-",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check API 2 Result1": {
      "main": [
        [
          {
            "node": "Merge Successful Result1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TTS API ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS API ": {
      "main": [
        [
          {
            "node": "Check API 3 Result1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS API 5": {
      "main": [
        [
          {
            "node": "Check API 4 Result1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check API 3 Result1": {
      "main": [
        [
          {
            "node": "Merge Successful Result1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TTS API 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check API 4 Result1": {
      "main": [
        [
          {
            "node": "Merge Successful Result1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Successful Result1": {
      "main": [
        [
          {
            "node": "Code16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS1": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [],
        [
          {
            "node": "Get row(s) in sheet7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "tts-3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate concat list": {
      "main": [
        [
          {
            "node": "Write Files to VPS2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Files to VPS2": {
      "main": [
        [
          {
            "node": "Merge MP3s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge MP3s": {
      "main": [
        [
          {
            "node": "Update row in sheet4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code16": {
      "main": [
        [
          {
            "node": "Convert to PCM File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "script-1": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read1": {
      "main": [
        [
          {
            "node": "Append row in sheet2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Append row in sheet3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger4": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain6": {
      "main": [
        [
          {
            "node": "Append row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item List Output Parser4": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain6",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet10": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter News1": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items5": {
      "main": [
        [],
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "Basic LLM Chain6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet1": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "3ba790a3-b174-4566-91d5-5c316118e4e0",
  "triggerCount": 0,
  "tags": []
}